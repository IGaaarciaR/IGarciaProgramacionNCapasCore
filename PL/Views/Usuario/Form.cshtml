@model ML.Usuario
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    <div class="row">

        <div class="col-md-12">

            <h2>Usuario</h2>

        </div>

    </div>

    <div class="row">

        <div class="col-md-12">

            <hr />

        </div>

    </div>

    <div class="row">

            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                    <div class="form-group">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.IdUsuario, new { @class = "d-none" })

                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "d-none form-control" })

                            @Html.ValidationMessageFor(model => model.IdUsuario)

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.UserName)
                           <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-person-fill"></i></span>

                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control"  })

                            @Html.ValidationMessageFor(model => model.UserName)

                            @*@Html.Label("", null, new {@id = "lblUserName"})*@
                             </div>

                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Nombre)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-person-lines-fill"></i></span>


                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @onkeydown ="SoloLetras(event, 'lblNombre')" })

                            @Html.ValidationMessageFor(model => model.Nombre)

                            </div>
                            @Html.Label("", null, new {@id = "lblNombre"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.ApellidoPaterno)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-person-lines-fill"></i></span>


                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" , @onkeypress ="SoloLetras(event, 'lblApellidoPaterno')" })

                            @Html.ValidationMessageFor(model => model.ApellidoPaterno)

                            </div>

                            @Html.Label("", null, new {@id = "lblApellidoPaterno"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.ApellidoMaterno)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-person-lines-fill"></i></span>


                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" , @onkeypress ="SoloLetras(event, 'lblApellidoMaterno')" })

                            @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                            </div>

                            @Html.Label("", null, new {@id = "lblApellidoMaterno"})
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Email)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-envelope"></i></span>


                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @onkeypress ="Email(event, 'lblEmail')" })

                            @Html.ValidationMessageFor(model => model.Email)
                            </div>
                    @Html.Label("", null, new {@id = "lblEmail"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Password)
                            <div class="input-group mb-3">
                             <span class="input-group-text"><i class="bi bi-lock"></i></span>

                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @onkeypress ="Password(event, 'lblPassword')"  })

                            @Html.ValidationMessageFor(model => model.Password)
                            </div>
                            @Html.Label("", null, new {@id = "lblPassword"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.FechaNacimiento)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-calendar-date"></i></span>

                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control" , @id = "FechaNac"})

                            @Html.ValidationMessageFor(model => model.FechaNacimiento)
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Sexo)
                            <div class="input-group mb-3">
                                @Html.RadioButtonFor(model => model.Sexo, "M", false)
                                @Html.Label("Mujer")
                            </div>
                            <div class="input-group mb-3">
                                @Html.RadioButtonFor(model => model.Sexo, "H", false)
                                @Html.Label("Hombre")
                             </div>
                            @*@Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })
*@
                            @Html.ValidationMessageFor(model => model.Sexo)
                         
                        </div>

                    </div>
                    <div class="row">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Telefono)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-telephone"></i></span>

                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @onkeydown ="SoloNumeros(event, 'lblTelefono')" })

                            @Html.ValidationMessageFor(model => model.Telefono)
                            </div>
                            @Html.Label("", null, new {@id = "lblTelefono"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Celular)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-phone"></i></span>


                            @Html.TextBoxFor(model => model.Celular, new { @class = "form-control" , @onkeypress ="SoloNumeros(event, 'lblCelular')" })

                            @Html.ValidationMessageFor(model => model.Celular)
                    </div>
                            @Html.Label("", null, new {@id = "lblCelular"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.CURP)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-file-text"></i></span>

                            @Html.TextBoxFor(model => model.CURP, new { @class = "form-control" , @onkeydown ="CURP(event, 'lblCurp')" })
                           

                            @Html.ValidationMessageFor(model => model.CURP)
                            </div>
                            @Html.Label("", null, new {@id = "lblCurp"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Rol)
                            <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-list-ol"></i></span>

                            @*@Html.TextBoxFor(model => model.Semestre.IdSemestre, new { @class = "form-control" })*@
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un Rol", new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Rol.IdRol)
                            </div>
                        </div>

                    </div>
                    <div class="row">

                        <div class="col-md-3">

                            @Html.LabelFor(model=> model.Imagen)

                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                                <input id="IFImage" type='file' class="form-control" name="IFImage" onchange="validateFile(this), readURL(this);  " />
                            </div>

                            @if (Model.Imagen != null)
                            {

                                <img id="ImagenPreview" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />

                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Imagenes/userdefault.png" style="width:250px ; height:250px" />
                            }

                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Direccion.Calle)
                            <div class="input-group mb-3">
                             <span class="input-group-text"><i class="bi bi-signpost"></i></span>

                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" , @onkeydown ="LetrasYNumeros(event, 'lblCalle')" })

                            @Html.ValidationMessageFor(model => model.Direccion.Calle)
                            </div>
                            @Html.Label("", null, new {@id = "lblCalle"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Direccion.NumeroInterior)
                            <div class="input-group mb-3">
                             <span class="input-group-text"><i class="bi bi-hash"></i></span>

                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" , @onkeypress ="LetrasYNumeros(event, 'lblNumeroInterior')" })

                            @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                            </div>
                            @Html.Label("", null, new {@id = "lblNumeroInterior"})
                        </div>

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Direccion.NumeroExterior)
                             <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-hash"></i></span>

                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" , @onkeypress ="LetrasYNumeros(event, 'lblNumeroExterior')" })

                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                            </div>
                            @Html.Label("", null, new {@id = "lblNumeroExterior"})
                        </div>
                    </div>      

                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.Paises)
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-map" style="color: midnightblue"></i></span>
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un Pais", new { @class = "form-control", @id = "ddlPais" })
                                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Estados)
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-geo-alt-fill" style="color: midnightblue"></i></span>
                                @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                                }
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Municipios)
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-pin-angle" style="color: midnightblue"></i></span>
                                @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un Municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                                }
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Colonias)
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-signpost-2" style="color: midnightblue"></i></span>
                                @if (Model.Direccion.Colonia.Colonias == null)
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una Colonia", new { @class = "form-control", @id = "ddlColonia" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una Colonia", new { @class = "form-control", @id = "ddlColonia" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                                }
                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-3">

                            <input type="submit" value="Guardar" class="btn btn-success" />

                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })

                        </div>

                    </div>

            }

    </div>

</div>


@section Scripts
    {

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
    <script src="https://www.w3schools.com/lib/w3.js"></script>

    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script>


    <script>
        $(function () {
            $("#FechaNac").datepicker({ minDate: -130, maxDate: "+0D", dateFormat: 'dd-mm-yy' });
        });
    </script>


    <script type="text/javascript">

        $(document).ready(function () {
            $("#ddlPais").change(function () {
                $("#ddlEstado").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EstadoGetByIdPais")',
                    dataType: 'json',
                    data: { IdPais: $("#ddlPais").val() },
                    success: function (estados) {
                        $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(estados, function (i, estados) {
                            $("#ddlEstado").append('<option value="'
                                + estados.idEstado + '">'
                                + estados.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            });
        });
    </script>

    <script type="text/javascript">

        $(document).ready(function () {
            $("#ddlEstado").change(function () {
                $("#ddlMunicipio").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("MunicipioGetByIdEstado")',
                    dataType: 'json',
                    data: { IdEstado: $("#ddlEstado").val() },
                    success: function (municipios) {
                        $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(municipios, function (i, municipios) {
                            $("#ddlMunicipio").append('<option value="'
                                + municipios.idMunicipio + '">'
                                + municipios.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            });
        });
    </script>


    <script type="text/javascript">

        $(document).ready(function () {
            $("#ddlMunicipio").change(function () {
                $("#ddlColonia").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ColoniaGetByIdMunicipio")',
                    dataType: 'json',
                    data: { IdMunicipio: $("#ddlMunicipio").val() },
                    success: function (colonias) {
                        $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(colonias, function (i, colonias) {
                            $("#ddlColonia").append('<option value="'
                                + colonias.idColonia + '">'
                                + colonias.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            });
        });
    </script>


    <script type="text/javascript">

        function validateFile() {
            var allowedExtension = ['png', 'jpg'];
            var fileExtension = document.getElementById('IFImage').value.split('.').pop().toLowerCase();
            var isValidFile = false;
            for (var index in allowedExtension) {
                if (fileExtension === allowedExtension[index]) {
                    isValidFile = true;
                    break;
                }
            }
            if (!isValidFile) {
                alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                document.getElementById('IFImage').value = ""
            }
            return isValidFile;
        }

        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#ImagenPreview').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }


        function SoloLetras(e, controlId) {
            var caracter = e.key;
            if (!/^[a-zA-Z\s]*$/.test(caracter)) {
                //e.value = ""
                $('#' + controlId).text("Solo se aceptan letras");
                $('#' + controlId).css({ "color": "red" });
                //document.getElementById(controlId) = "";
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

        function SoloNumeros(e, controlId) {
            var caracter = e.key;
            if (!/^[0-9]+$/.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan números");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

        function LetrasYNumeros(e, controlId) {
            var caracter = e.key;
            if (!/^[A-Za-z0-9\s]+$/.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan letras y/o números");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

        function CURP(e, controlId) {
            var caracter = e.key;
            if (!/^[A-Z]{1}[AEIOU]{1}[A-Z]{2}[0-9]{2} + (0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1]) + [HM]{1} + (AS|BC|BS|CC|CS|CH|CL|CM|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|NE) + [B-DF-HJ-NP-TV-Z]{3} + [0-9A-Z]{1}[0-9]{1}$/.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan letras y/o números");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }
        function Password(e, controlId) {
            var caracter = e.key;
            if (!/^(?=.*\d)(?=.*[\u0021-\u002b\u003c-\u0040])(?=.*[A-Z])(?=.*[a-z])\S{8,16}$/.test(caracter)) {
                $('#' + controlId).text("La contraseña debe tener al entre 8 y 16 caracteres con: al menos un dígito, al menos una minúscula, al menos una mayúscula y al menos un caracter no alfanumérico");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

        function Email(e, controlId) {
            var caracter = e.key;
            if (!/-/.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan letras y/o números");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

    </script>
}